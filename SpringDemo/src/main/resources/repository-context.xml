<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
  	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
  	http://www.springframework.org/schema/tx 
  	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
  	http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- 讀取properties的資源 -->
	<bean	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"	id="propertyConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
		<property value="true" name="ignoreUnresolvablePlaceholders" />
	</bean>


	<!-- JDBC Configuration -->

	<bean destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		id="dataSource">
		<property value="${jdbc.driverClassName}" name="driverClass" />
		<property value="${jdbc.databaseurl}" name="jdbcUrl" />
		<property value="${jdbc.username}" name="user" />
		<property value="${jdbc.password}" name="password" />
		<!-- 初始化時獲取的連接數,取值應在了MinPoolSize與maxPoolSize之間 -->
		<property value="${hibernate.c3p0.initialSize}" name="initialPoolSize" />
		<!-- 指達到max_size的用量後一次可以再追加多少的連線數 -->
		<property value="${hibernate.c3p0.acquireIncrement}" name="acquireIncrement" />
		<!-- 最小連接數 -->
		<property value="${hibernate.c3p0.minSize}" name="minPoolSize" />
		<!-- 最大連接數 -->
		<property value="${hibernate.c3p0.maxSize}" name="maxPoolSize" />
		<!-- 最大閒置時間,?秒內未使用則連接被丟棄,若為0則永不丟棄 -->
		<property value="${hibernate.c3p0.maxIdleTime}" name="maxIdleTime" />
		<!-- 每隔?秒檢查連接池裡的空閒連接,單位是秒 -->
		<property value="${hibernate.c3p0.idleTestPeriod}" name="idleConnectionTestPeriod" />
		<!--maxStatementsPerConnection定義連接池內單個連接所擁有的最大緩存statements數。Default: 0 -->
		<property value="${hibernate.c3p0.maxStatementsPerConnection}"
			name="maxStatementsPerConnection" />


	</bean>



	<!-- jpa需要使用transactionManager來管理 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan">
			<list>
				<value>com.SpringMVC.model</value>
			</list>
		</property>

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="dataSource" ref="dataSource" />

		<property name="jpaProperties">
			<props>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.showSql}</prop>
				<prop key="hibernate.format_sql">${hibernate.formatSql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.useSqlComments}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="org.hibernate.envers.store_data_at_delete">${org.hibernate.envers.storeDataAtDelete}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.useQueryCache}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.useSecondLevelCache}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generateStatistics}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.connection.charSet">UTF-8</prop>
				<prop key="hibernate.connection.characterEncoding">UTF-8</prop>
				<prop key="hibernate.auto_close_session">${hibernate.auto_close_session}</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />


</beans>    